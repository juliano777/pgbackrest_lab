Delta Option

## Objective
The main objective here is to see how the Delta option can be used.

## Requirements:

- None but the setup prepared in runbook-03

Restore a Backup required the database cluster directory to be cleaned before the restore could be performed. The delta option allows pgBackRest to automatically determine which files in the database cluster directory can be preserved and which ones need to be restored from the backup â€” it also removes files not present in the backup manifest so it will dispose of divergent changes. 

For this test, i will stop one of the standby and attempt restore without deleted the content of the data_directory.
Stop the demo cluster

docker exec --user=enterprisedb pgnode2 bash -c "/usr/lib/edb-as/13/bin/pg_ctl -D /var/lib/edb/as13/data stop"

docker exec pgnode2 bash -c "sudo -iu enterprisedb pgbackrest --stanza=demo --type=standby --no-delta restore"
...
root@ip:~# docker exec pgnode2 bash -c "sudo -iu enterprisedb pgbackrest --stanza=demo --type=standby --no-delta restore"
P00   INFO: restore command begin 2.34: --no-delta --exec-id=10517-58fbe9e5 --log-level-console=info --log-level-file=debug --pg1-path=/var/lib/edb/as13/data --recovery-option="primary_conninfo=host=pgnode1 user=replic_user port=5444" --repo1-host=pgbkp1 --repo1-host-user=pgbackrest --stanza=demo --type=standby
P00   INFO: repo1: restore backup set 20210825-015913F
ERROR: [040]: unable to restore to path '/var/lib/edb/as13/data' because it contains files
       HINT: try using --delta if this is what you intended.
P00   INFO: restore command end: aborted with exception [040]


So here we see that it gives us a hint to use delta

docker exec pgnode2 bash -c "sudo -iu enterprisedb pgbackrest --stanza=demo --type=standby --delta restore"
...
oot@ip:~# docker exec pgnode2 bash -c "sudo -iu enterprisedb pgbackrest --stanza=demo --type=standby --delta restore"
P00   INFO: restore command begin 2.34: --delta --exec-id=10526-aebc2501 --log-level-console=info --log-level-file=debug --pg1-path=/var/lib/edb/as13/data --recovery-option="primary_conninfo=host=pgnode1 user=replic_user port=5444" --repo1-host=pgbkp1 --repo1-host-user=pgbackrest --stanza=demo --type=standby
P00   INFO: repo1: restore backup set 20210825-015913F
P00   INFO: remove invalid files/links/paths from '/var/lib/edb/as13/data'
P01   INFO: restore file /var/lib/edb/as13/data/global/pg_control.pgbackrest.tmp (8KB, 99%) checksum c8d07706ea5077d98e30e47bb94c1f8e13db49a8
P01   INFO: restore file /var/lib/edb/as13/data/log/enterprisedb-2021-08-25_000000.log (1.8KB, 99%) checksum 6bae86d9d48a7560f24a624ce43ccf0812d0565b
P01   INFO: restore file /var/lib/edb/as13/data/backup_label (262B, 99%) checksum 5286199a510cc1b5ab199ee96f8097465c8a83e8
P01   INFO: restore file /var/lib/edb/as13/data/postgresql.auto.conf (88B, 99%) checksum c6b93d1c2880daea891c8879c86d167c6678facf
P01   INFO: restore file /var/lib/edb/as13/data/current_logfiles (46B, 99%) checksum a9f4e6707e8e214f8f545c4cb2f485093f268083
P00   INFO: write updated /var/lib/edb/as13/data/postgresql.auto.conf
P00   INFO: restore global/pg_control (performed last to ensure aborted restores cannot be started)
P00   INFO: restore command end: completed successfully (27107ms)

#Start the server
docker exec --user=enterprisedb pgnode2 bash -c "/usr/lib/edb-as/13/bin/pg_ctl -D /var/lib/edb/as13/data start"
