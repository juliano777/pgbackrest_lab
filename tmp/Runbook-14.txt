## Objective
Understanding how to take backup to Azure using pgbackrest

## Requirements:
-Rb012

Nothing much as usual but you can decide to create a new stanza as seen below

pgBackRest for Azure

pgBackRest has been around for a number of years with support for AWS. Over the past year or so it's received a subtle update under the covers being re-written in C â€“ thus allowing for even better performance which is a big win. Now we can also use pgbackrest with Azure.

Now we need to configure pgBackRest. You'll want to edit `/etc/pgbackrest.conf`. First we're going to give the path for the database that we're backing up. Then we're going to specify the details relevant for Azure.

You will need to create an azure storage account and a container to store the backups. Next you will need to get the keey from your account.
You can follow the below links to do so. 

https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal
https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-portal
https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal

pgBackRest repositories can be stored in the container root by setting repo-path=/ but it is usually best to specify a prefix, such as /repo, so logs and other Azure-generated content can also be stored in the container.

# Stop and initialize a new cluster

docker exec --user=enterprisedb pgnode2 bash -c "/usr/lib/edb-as/13/bin/pg_ctl -D /var/lib/edb/as13/data stop"
docker exec --user=enterprisedb pgnode2 bash -c "rm -rf /var/lib/edb/as13/data/*"

# Stop previous stanza

docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=gcpdemo stop"
docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=gcpdemo stanza-delete"

# Initialize new Cluster

docker exec --user=enterprisedb pgnode2 bash -c "/usr/lib/edb-as/13/bin/initdb -D /var/lib/edb/as13/data"

# Update basic config on pgnode2

cat << EOF | docker exec -i pgnode2 bash
echo "listen_addresses = '*'" >> /var/lib/edb/as13/data/postgresql.conf
echo "archive_mode = on" >> /var/lib/edb/as13/data/postgresql.conf
echo "archive_command = 'pgbackrest --stanza=azuredemo archive-push %p'" >> /var/lib/edb/as13/data/postgresql.conf
echo "logging_collector = on" >> /var/lib/edb/as13/data/postgresql.conf
EOF

# Update the pg_hba on pgnode2
```bash

for container in pgnode2
do
docker exec $container bash -c "echo 'host all all all md5' >> /var/lib/edb/as13/data/pg_hba.conf"
docker exec $container bash -c "echo 'host replication all all md5' >> /var/lib/edb/as13/data/pg_hba.conf"
done

Update the backup server pgbackrest.conf file

```
# Provide your azure key below.

# Update pgbackrest file on pgbkp1

docker exec pgbkp1 bash -c ":> /etc/pgbackrest.conf"

for container in pgbkp1
do
cat << EOF | docker exec -i $container bash
echo "[global]" >> /etc/pgbackrest.conf
echo "process-max=4" >> /etc/pgbackrest.conf
echo "repo1-azure-account=pgzurebackup" >> /etc/pgbackrest.conf
echo "repo1-azure-container=pgazurecontainer" >> /etc/pgbackrest.conf
echo "repo1-azure-key=xxxxx" >> /etc/pgbackrest.conf
echo "repo1-path=/demo-repo" >> /etc/pgbackrest.conf
echo "repo1-type=azure" >> /etc/pgbackrest.conf
echo "repo1-retention-full=2" >> /etc/pgbackrest.conf
echo "log-level-console=info" >> /etc/pgbackrest.conf
echo "log-level-file=debug" >> /etc/pgbackrest.conf
echo "delta=y" >> /etc/pgbackrest.conf

echo "[azuredemo]" >> /etc/pgbackrest.conf
echo "pg1-host=pgnode2" >> /etc/pgbackrest.conf
echo "pg1-host-user=enterprisedb" >> /etc/pgbackrest.conf
echo "pg1-path=/var/lib/edb/as13/data" >> /etc/pgbackrest.conf
EOF
done
```
docker exec pgbkp1 bash -c "cat /etc/pgbackrest.conf"

On your Postgres server, you do the below changes
archive_command = 'pgbackrest --stanza=azuredemo archive-push %p'

# Update pgbackrest file on pgnode2

docker exec pgnode2 bash -c ":> /etc/pgbackrest.conf"

for container in pgnode2
do
cat << EOF | docker exec -i $container bash
echo "[global]" >> /etc/pgbackrest.conf
echo "repo1-host=pgbkp1" >> /etc/pgbackrest.conf
echo "repo1-host-user=pgbackrest" >> /etc/pgbackrest.conf
echo "log-level-console=info" >> /etc/pgbackrest.conf
echo "log-level-file=debug" >> /etc/pgbackrest.conf
echo "delta=y" >> /etc/pgbackrest.conf

echo "[azuredemo]" >> /etc/pgbackrest.conf
echo "pg1-path=/var/lib/edb/as13/data" >> /etc/pgbackrest.conf
echo "pg1-user=enterprisedb" >> /etc/pgbackrest.conf
echo "pg1-port=5444" >> /etc/pgbackrest.conf
EOF
done
```
docker exec pgnode2 bash -c "cat /etc/pgbackrest.conf"

# start the database cluster on pgnode2

docker exec --user=enterprisedb pgnode2 bash -c "/usr/lib/edb-as/13/bin/pg_ctl -D /var/lib/edb/as13/data start"
docker exec --user=enterprisedb pgnode2 /usr/lib/edb-as/13/bin/psql -p 5444 -d edb -c "show archive_command;"

# Create stanza azuredemo

docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo start"
docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo stanza-create"
docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo check"

root@ip:~# docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo stanza-create"
P00   INFO: stanza-create command begin 2.34: --exec-id=11087-c4c4a00...
P00   INFO: stanza-create for stanza 'azuredemo' on repo1
P00   INFO: stanza-create command end: completed successfully (1145ms

# Take full backup

docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo --type=full backup"

docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo info"

root@ip:~# docker exec --user=pgbackrest pgbkp1 bash -c "pgbackrest --stanza=azuredemo info"
stanza: azuredemo
    status: ok
    cipher: none

    db (current)
        wal archive min/max (13): 000000010000000000000002/000000010000000000000004

        full backup: 20210831-035213F
            timestamp start/stop: 2021-08-31 03:52:13 / 2021-08-31 03:52:27
            wal start/stop: 000000010000000000000004 / 000000010000000000000004
            database size: 49.8MB, database backup size: 49.8MB
            repo1: backup set size: 8MB, backup size: 8MB


Location: pgazurecontainer / demo-repo / backup / azuredemo / 20210831-035213F
